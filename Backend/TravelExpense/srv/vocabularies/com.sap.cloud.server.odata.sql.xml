<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0">
    <edmx:Reference Uri="https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Core.V1.xml">
        <edmx:Include Namespace="Org.OData.Core.V1" Alias="Core"/>
    </edmx:Reference>
    <edmx:DataServices>
        <Schema Namespace="com.sap.cloud.server.odata.sql.v1" Alias="SQL" xmlns="http://docs.oasis-open.org/odata/ns/edm">
            <Annotation Term="Core.Description" String="This schema defines terms and types for OData/SQL mapping."/>
            <Term Name="Imported" Type="Core.Tag" DefaultValue="true" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Marks an entity set or type as having been imported into a model from a pre-existing SQL table."/>
            </Term>
            <Term Name="ServerOnly" Type="Core.Tag" DefaultValue="true" AppliesTo="Annotation EntitySet EntityType NavigationProperty NavigationPropertyBinding ">
                <Annotation Term="Core.Description" String="This annotation indicates that the containing CSDL element and it's child elements must not be displayed for the client when it is querying the metadata"/>
            </Term>
            <Term Name="Column" Type="Edm.String" AppliesTo="Property">
                <Annotation Term="Core.Description" String="Specifies the SQL column name for a property."/>
            </Term>
            <Term Name="ColumnType" Type="Edm.String" AppliesTo="Property">
                <Annotation Term="Core.Description" String="Specifies the SQL column type for a property."/>
            </Term>
            <Term Name="ColumnDefault" Type="Edm.String" AppliesTo="Property">
                <Annotation Term="Core.Description" String="Specifies a SQL column default for a property."/>
            </Term>
            <Term Name="HasColumnDefault" Type="Core.Tag" DefaultValue="true" AppliesTo="Property">
                <Annotation Term="Core.Description" String="A value for this property can be provided by the client on insert. If no value is provided by the client, a default value is generated by the database."/>
            </Term>
            <Term Name="Schema" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies the SQL schema name for an entity set."/>
            </Term>
            <Term Name="Table" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies the SQL table name for an entity set."/>
            </Term>
            <Term Name="TableType" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies the SQL table type (e.g. 'row', 'column') for an entity set."/>
            </Term>
            <Term Name="KeySequence" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies the SQL key sequence for an entity set. A key sequence is used for the generation of primary keys."/>
            </Term>
            <Term Name="JoinUsing" Type="Edm.NavigationPropertyPath" AppliesTo="NavigationProperty">
                <Annotation Term="Core.Description" String="Specifies additional NavigationProperty which provides navigation to the target entities."/>
            </Term>
            <Term Name="CacheDatabase" Type="Core.Tag" DefaultValue="true" AppliesTo="EntityContainer">
                <Annotation Term="Core.Description" String="Marks the entity container as being a SQL cache (staging) database for a backend system."/>
            </Term>
            <Term Name="DataSource" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies a SQL data source name for entity handler generation."/>
            </Term>
            <Term Name="Statement" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies a SQL statement for entity handler generation (using Embedded SQL syntax)."/>
            </Term>
            <Term Name="DownloadQuery" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Custom SQL for initial download query for change-tracked entities."/>
            </Term>
            <Term Name="SortInMemory" Type="Core.Tag" DefaultValue="true" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Marks the entity set as being unsortable (by primary key) in the backend system. This forces the use of in-memory sorting of backend results during cache refresh."/>
            </Term>
            <Term Name="TrackChanges" Type="Core.Tag" DefaultValue="true" AppliesTo="EntityContainer EntitySet EntityType">
                <Annotation Term="Core.Description" String="Enables OData change tracking for all entity sets within an entity container or for a particular entity set."/>
            </Term>
            <Term Name="DeltaView" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies the SQL delta view for an entity set. A delta view is used instead of the table for delta queries."/>
            </Term>
            <Term Name="TrackingTable" Type="Edm.String" AppliesTo="EntitySet EntityType">
                <Annotation Term="Core.Description" String="Specifies the SQL tracking table for an entity set. A tracking table tracks creates, updates and deletes."/>
            </Term>
            <Term Name="DeltaFilters" Type="Collection(SQL.DeltaFilter)" AppliesTo="Schema">
                <Annotation Term="Core.Description" String="Specifies the SQL delta filters for a schema."/>
            </Term>
            <Term Name="RecursiveJoins" Type="Collection(SQL.RecursiveJoin)" AppliesTo="Schema">
                <Annotation Term="Core.Description" String="Specifies the SQL recursive joins for a schema."/>
            </Term>
            <Term Name="Indexes" Type="Collection(SQL.Index)">
                <Annotation Term="Core.Description" String="Specifies the secondary indexes for an entity set."/>
            </Term>
            <ComplexType Name="Index">
                <Annotation Term="Core.Description" String="Specifies a secondary index for an entity set."/>
                <Property Name="Name" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="A name for the index, unique among indexes for the entity set."/>
                </Property>
                <Property Name="Properties" Type="Collection(Edm.PropertyPath)" Nullable="false">
                    <Annotation Term="Core.Description" String="One or more property paths for the indexed properties."/>
                </Property>
                <Property Name="Descending" Type="Collection(Edm.PropertyPath)" Nullable="false">
                    <Annotation Term="Core.Description" String="Subset of Properties that should be indexed in descending sequence."/>
                </Property>
                <Property Name="Unique" Type="Edm.Boolean" Nullable="false" DefaultValue="false">
                    <Annotation Term="Core.Description" String="True if only one entity instance can exist in the entity set corresponding to each index entry."/>
                </Property>
            </ComplexType>
            <ComplexType Name="DeltaFilter">
                <Annotation Term="Core.Description">
                    <String>
                        A delta filter is used for association-based filtering, by the materialization and change tracking
                        of a mapping from a source entity set to a target entity set.
                        The source entity set often represents a 'user'.
                        The target entity set often represents an entity associated (possibly indirectly) with the user, e.g. a 'shop'.
                        Through defined navigation properties in the schema, all possible paths from the source entity set to the target entity set are automatically determined
                        (as modified by MappingVia, PrunePaths, and RecursiveJoins).
                        Through the generation of appropriate database triggers and views, change tracking of entities that this mapping is applied to (see ApplyTo) is achieved.
                    </String>
                </Annotation>
                <Property Name="FilterName" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="A schema-unique name for this filter. Used in the generation of SQL artifact names."/>
                </Property>
                <Property Name="MappingFrom" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="Source entity set for the mapping, e.g. 'UserSet'."/>
                </Property>
                <Property Name="MappingVia" Type="Edm.String" Nullable="true">
                    <Annotation Term="Core.Description" String="An entity set which must exist on the path from source to target for the path to be considered."/>
                </Property>
                <Property Name="MappingTo" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="Target entity set for the mapping, e.g. 'ShopSet'."/>
                </Property>
                <Property Name="PrunePaths" Type="Collection(Edm.String)" Nullable="false">
                    <Annotation Term="Core.Description" String="Paths which should be excluded from consideration. For example, 'GroupSet' would exclude mappings passing through groups, and 'UserSet->GroupSet' would exclude mappings involving navigation from users to groups."/>
                </Property>
                <Property Name="ApplyTo" Type="Collection(Edm.String)" Nullable="false">
                    <Annotation Term="Core.Description" String="Final entity sets which this delta filter should be applied to for change tracking. The apply-to entity sets should be reachable by navigation from the target entity set. For example, an entity set 'ItemInventorySet' storing item inventory for shops. Navigation from the target entity set to the apply-to entity sets should be only via immutable associations. Navigation to the apply-to entity sets via mutable associations should be achieved using a delta filter where all mutable associations occur on the path between 'MappingFrom' and 'MappingTo'. Note that 'ApplyTo' can include the 'MappingTo' entity set."/>
                </Property>
                <Property Name="ExtraColumns" Type="Collection(Edm.String)" Nullable="true">
                    <Annotation Term="Core.Description" String="TBD - may be removed"/>
                </Property>
                <Property Name="ExtraJoins" Type="Collection(Edm.String)" Nullable="true">
                    <Annotation Term="Core.Description" String="TBD - may be removed"/>
                </Property>
                <Property Name="IsDeleted" Type="Edm.String" Nullable="true">
                    <Annotation Term="Core.Description" String="TBD - may be removed"/>
                </Property>
                <Property Name="LastModified" Type="Edm.String" Nullable="true">
                    <Annotation Term="Core.Description" String="TBD - may be removed"/>
                </Property>
            </ComplexType>
            <ComplexType Name="RecursiveJoin">
                <Annotation Term="Core.Description" String="Recursive joins are materialized to flatten recursive hierarchies, in support of delta filters."/>
                <Property Name="From" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="Source entity set involved in a recursive hierarchy, e.g. 'UserSet'."/>
                </Property>
                <Property Name="Join" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="An entity set that has a navigation property for its own entity type, e.g. 'OrganisationSet'."/>
                </Property>
                <Property Name="With" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="The name of the navigation property that joins an entity to its parent, e.g. 'ParentOrganisation'."/>
                </Property>
                <Property Name="Into" Type="Edm.String" Nullable="false">
                    <Annotation Term="Core.Description" String="Target entity set into which the flattened hierarchy should be materialized, e.g. 'UserOrganisationSet'."/>
                </Property>
            </ComplexType>
        </Schema>
    </edmx:DataServices>
</edmx:Edmx>
